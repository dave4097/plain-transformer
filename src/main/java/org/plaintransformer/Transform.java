package org.plaintransformer;

/**
 * Main entry point to execute a transform.
 *
 * @author David H
 */
public class Transform {

   /**
    * Returns a {@link To} object configured with the given class as the type of the object generated as a result of the
    * transformation. The standard configuration will be used - see {@link TransformContext}.
    *
    * @param annotatedClass The class of the object generated by the transformation.
    * @param <T> The type of object generated by the transformation.
    * @return a {@link To} object configured with the given class as the type of the object generated as a result of the
    * transformation.
    */
   public static <T> To<T> to(Class<T> annotatedClass) {
      return new To<>(annotatedClass, TransformContext.defaultContext());
   }

   /**
    * Returns a {@link To} object configured with the given class as the type of the object generated as a result of the
    * transformation. The given {@link TransformContext} will be used to setup the transform.
    *
    * @param annotatedClass The class of the object generated by the transformation.
    * @param transformContext The settings to use for the configuration.
    * @param <T> The type of object generated by the transformation.
    * @return a {@link To} object configured with the given class as the type of the object generated as a result of the
    * transformation.
    */
   public static <T> To<T> to(Class<T> annotatedClass, TransformContext transformContext) {
      return new To<>(annotatedClass, transformContext);
   }
}
